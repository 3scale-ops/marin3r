---
apiVersion: marin3r.3scale.net/v1alpha1
kind: EnvoyConfig
metadata:
  name: envoy1
  namespace: default
spec:
  nodeID: envoy1
  serialization: yaml
  envoyResources:
    clusters:
      - value: |
          name: echo_api
          connect_timeout: 1s
          type: STRICT_DNS
          dns_lookup_family: V4_ONLY
          lb_policy: ROUND_ROBIN
          load_assignment:
            cluster_name: echo_api
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address: { socket_address: { address: echo-api.3scale.net, port_value: 443 }}
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
              sni: echo-api.3scale.net
    routes:
      - value: |
          name: echo-api.3scale.net
          virtual_hosts:
            - name: ingress
              domains: ["*"]
              routes:
                - match:
                    prefix: "/"
                  route:
                    auto_host_rewrite: true
                    cluster: echo_api
    listeners:
      - value: |
          name: http
          address: { socket_address: { address: 0.0.0.0, port_value: 8888 }}
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    access_log:
                      - name: envoy.access_loggers.file
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                          path: /dev/stdout
                    stat_prefix: ingress_http
                    rds: { route_config_name: "echo-api.3scale.net", config_source: { ads: {}, resource_api_version: "V3" }}
                    http_filters:
                      - name: "http_router"
                        config_discovery:
                          config_source: { ads: {}, resource_api_version: V3 }
                          type_urls: ["type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"]

    extensionConfigs:
      - value: |
          name: http_router
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
            dynamic_stats: false
