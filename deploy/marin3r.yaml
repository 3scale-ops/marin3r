---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: marin3r
  namespace: default

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: marin3r
  namespace: default
  labels:
    app: marin3r
spec:
  replicas: 1
  selector:
    matchLabels:
      app: marin3r
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: marin3r
    spec:
      serviceAccountName: marin3r
      containers:
        - name: marin3r
          image: localhost:5000/marin3r:test
          imagePullPolicy: Always
          # command: ["bash"]
          # args: ["-c", "sleep 3600"]
          args:
            - --certificate=/etc/marin3r/tls/server/tls.crt
            - --private-key=/etc/marin3r/tls/server/tls.key
            - --ca=/etc/marin3r/tls/ca/tls.crt
            - --log-level=debug
            - --namespace=default
          ports:
            - name: mgmt-server
              containerPort: 18000
            - name: mgmt-gateway
              containerPort: 19001
            - name: webhook
              containerPort: 8443
          volumeMounts:
            - name: envoy-sidecar-bootstrap
              mountPath: /etc/marin3r/envoy/
              subPath: bootstrap.yaml
            - name: server-cert
              mountPath: /etc/marin3r/tls/server/
            - name: ca-cert
              mountPath: /etc/marin3r/tls/ca/
      volumes:
        - name: envoy-sidecar-bootstrap
          configMap:
            name: envoy-sidecar-bootstrap
        - name: server-cert
          secret:
            secretName: marin3r-server-cert
        - name: ca-cert
          secret:
            secretName: marin3r-ca-cert

---
apiVersion: v1
kind: Service
metadata:
  name: marin3r
  namespace: default
  labels:
    app: marin3r
spec:
  type: ClusterIP
  ports:
    - name: mgmt-server
      port: 18000
      targetPort: mgmt-server
    - name: mgmt-gateway
      port: 19001
      targetPort: mgmt-gateway
    - name: webhook
      port: 443
      targetPort: webhook
  selector:
    app: marin3r

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-sidecar-bootstrap
  namespace: default
data:
  config.yaml: |
    dynamic_resources:
      ads_config:
        api_type: GRPC
        transport_api_version: V2
        grpc_services:
          - envoy_grpc:
              cluster_name: ads_cluster
      cds_config:
        ads: {}
      lds_config:
        ads: {}
    static_resources:
      clusters:
        - name: ads_cluster
          connect_timeout: 1s
          type: strict_dns
          http2_protocol_options: {}
          load_assignment:
            cluster_name: ads_cluster
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: marin3r
                          port_value: 18000
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.api.v2.auth.UpstreamTlsContext
              common_tls_context:
                # mTLS is necessary for sds
                tls_certificates:
                  - certificate_chain:
                      filename: /etc/envoy/tls/client/tls.crt
                    private_key:
                      filename: /etc/envoy/tls/client/tls.key

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: marin3r
  namespace: default
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "watch", "list"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "watch", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: marin3r
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: marin3r
subjects:
  - kind: ServiceAccount
    name: marin3r
    namespace: default

---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: mariner-sidecar-injector-webhook
webhooks:
  - name: webhook.marin3r.3scale.net
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    timeoutSeconds: 5
    clientConfig:
      service:
        name: marin3r
        namespace: default
        path: /mutate
      caBundle: |
        LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRakNDQWlxZ0F3SUJBZ0lVTEZhc0tlMGNB
        MStOMU84VXU4eG9LK2NkdjRJd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0V6RVJNQThHQTFVRUF3d0lR
        MmhoYm1kbFRXVXdIaGNOTWpBd05EQTBNREEwT0RFNVdoY05NekF3TkRBeQpNREEwT0RFNVdqQVRN
        UkV3RHdZRFZRUUREQWhEYUdGdVoyVk5aVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFECmdnRVBB
        RENDQVFvQ2dnRUJBTUtyVDV3VERYbTJmRXpTRDM1UU5hT3ltS0JiVmhMdVdFa25wQ2dQMlhTZWp3
        MGIKSGJ4c1crdXVXYkVhL0hTRHZ4bENGbmFqcHlhbzNXT29nd205QkhEVGF0bDRrZkVJNmNQRzlk
        S21kUFE3N2Q4RApmVEorSTFOaVM0aERLU2xla3I3a2d4VkltNnhKc3R2NzNNOU5oKzYwQWtkMTJP
        TmM5NXZrMjUzT0Njd0NpTlVuCnhWVVNLNGp3aldsbXNhSlVpeUpYYWZ4LytmbmpIYVZjTS95WEpk
        ekJxV1NLemRzVzB1cEJ4RjFkMU4xM05nR3kKZ0Qrb0pnYk9hRE4yV2JnL0JiamhFcVA0Q0VKcU9k
        UGYvUW94M09BenQ5c2FNTVg3SlZCMU0yUkhlM2VydDJuQgpxb0dDcThzT1N1QmNRcHZnc1ZzTklD
        NE51TlVibmVEWkhjVjhwME1DQXdFQUFhT0JqVENCaWpBZEJnTlZIUTRFCkZnUVUxekJCWUR1N1cy
        NkFvZ0ozUEFXSlRzVWRhclV3VGdZRFZSMGpCRWN3UllBVTF6QkJZRHU3VzI2QW9nSjMKUEFXSlRz
        VWRhcldoRjZRVk1CTXhFVEFQQmdOVkJBTU1DRU5vWVc1blpVMWxnaFFzVnF3cDdSd0RYNDNVN3hT
        Nwp6R2dyNXgyL2dqQU1CZ05WSFJNRUJUQURBUUgvTUFzR0ExVWREd1FFQXdJQkJqQU5CZ2txaGtp
        Rzl3MEJBUXNGCkFBT0NBUUVBV2svcS85LzVYaUhva3lDR3pLSVF1US9WOU5KeWxOMnQrTFE2b0pG
        WEpHWnR0UU9za1B3NUF1aVcKenlNYnNMdnFodDIzck5JbDU2em1TZzBvREVycjl3M1pPY25KcS9o
        R3Q5YlpJNU5sOEkzMHB3WXQ4L1N3RDRieAp0OHhEaGF6RCtJditWL0pRNldVMTlBNnZiSjRGQVZj
        Q1pNN0dRSlBmaDFFbVY3NlluRlhnamJrQmlwcmIyT1JpCjVSdHlHZnFaYmd2Qjh6YUJaVDdaMVdp
        S2M4Z0U5dUNPa0lweCtNUlY2bG82Q1NWdllHbzRIT2tjVW1zV1dsNXcKQU1kWXBqZUdON09iTUZE
        b2d1dGhEa3BNdVVsUmZGbDhZSyt1MXYxQkk4Zm5aUE5pQmhQWmZrMFdhRjh4RDFrRgpka1BjbjY5
        TWIvT2R3QnhjdVRWZnZLNkxFcER3Vnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods"]
        scope: Namespaced
