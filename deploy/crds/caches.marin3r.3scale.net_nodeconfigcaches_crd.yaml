apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: nodeconfigcaches.caches.marin3r.3scale.net
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.nodeID
    name: NodeID
    type: string
  - JSONPath: .status.publishedVersion
    name: PublishedVersion
    type: string
  group: caches.marin3r.3scale.net
  names:
    kind: NodeConfigCache
    listKind: NodeConfigCacheList
    plural: nodeconfigcaches
    singular: nodeconfigcache
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: NodeConfigCache is the Schema for the nodeconfigcaches API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: NodeConfigCacheSpec defines the desired state of NodeConfigCache
          properties:
            nodeID:
              type: string
            resources:
              description: EnvoyResources holds each envoy api resource type
              properties:
                clusters:
                  items:
                    description: EnvoyResource holds a single envoy api resources,
                      serialized as json, base64 encoded
                    properties:
                      name:
                        type: string
                      value:
                        type: string
                    required:
                    - name
                    - value
                    type: object
                  type: array
                endpoints:
                  items:
                    description: EnvoyResource holds a single envoy api resources,
                      serialized as json, base64 encoded
                    properties:
                      name:
                        type: string
                      value:
                        type: string
                    required:
                    - name
                    - value
                    type: object
                  type: array
                listeners:
                  items:
                    description: EnvoyResource holds a single envoy api resources,
                      serialized as json, base64 encoded
                    properties:
                      name:
                        type: string
                      value:
                        type: string
                    required:
                    - name
                    - value
                    type: object
                  type: array
                routes:
                  items:
                    description: EnvoyResource holds a single envoy api resources,
                      serialized as json, base64 encoded
                    properties:
                      name:
                        type: string
                      value:
                        type: string
                    required:
                    - name
                    - value
                    type: object
                  type: array
                runtime:
                  items:
                    description: EnvoyResource holds a single envoy api resources,
                      serialized as json, base64 encoded
                    properties:
                      name:
                        type: string
                      value:
                        type: string
                    required:
                    - name
                    - value
                    type: object
                  type: array
                secrets:
                  items:
                    description: EnvoySecretResource holds a reference to a k8s Secret
                      from where to take a secret from
                    properties:
                      name:
                        type: string
                      ref:
                        description: SecretReference represents a Secret Reference.
                          It has enough information to retrieve secret in any namespace
                        properties:
                          name:
                            description: Name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: Namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                    required:
                    - name
                    - ref
                    type: object
                  type: array
              type: object
            serialization:
              enum:
              - json
              - b64json
              - yaml
              type: string
            version:
              description: 'TODO: add validations'
              type: string
          required:
          - nodeID
          - resources
          - serialization
          - version
          type: object
        status:
          description: NodeConfigCacheStatus defines the observed state of NodeConfigCache
          properties:
            conditions:
              description: Conditions represent the latest available observations
                of an object's state
              items:
                description: "Condition represents an observation of an object's state.
                  Conditions are an extension mechanism intended to be used when the
                  details of an observation are not a priori known or would not apply
                  to all instances of a given Kind. \n Conditions should be added
                  to explicitly convey properties that users and components care about
                  rather than requiring those properties to be inferred from other
                  observations. Once defined, the meaning of a Condition can not be
                  changed arbitrarily - it becomes part of the API, and has the same
                  backwards- and forwards-compatibility concerns of any other part
                  of the API."
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    description: ConditionReason is intended to be a one-word, CamelCase
                      representation of the category of cause of the current status.
                      It is intended to be used in concise output, such as one-line
                      kubectl get output, and in summarizing occurrences of causes.
                    type: string
                  status:
                    type: string
                  type:
                    description: "ConditionType is the type of the condition and is
                      typically a CamelCased word or short phrase. \n Condition types
                      should indicate state in the \"abnormal-true\" polarity. For
                      example, if the condition indicates when a policy is invalid,
                      the \"is valid\" case is probably the norm, so the condition
                      should be called \"Invalid\"."
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            publishedVersion:
              description: PublishedVersion is the config version currently served
                by the envoy control plane for the node-id
              type: string
            revisions:
              items:
                description: ConfigRevisionRef holds a reference to NodeConfigRevision
                  object
                properties:
                  ref:
                    description: ObjectReference contains enough information to let
                      you inspect or modify the referred object.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                  version:
                    type: string
                required:
                - ref
                - version
                type: object
              type: array
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
