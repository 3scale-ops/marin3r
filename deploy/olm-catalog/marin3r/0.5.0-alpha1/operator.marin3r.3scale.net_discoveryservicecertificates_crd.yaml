apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: discoveryservicecertificates.operator.marin3r.3scale.net
spec:
  group: operator.marin3r.3scale.net
  names:
    kind: DiscoveryServiceCertificate
    listKind: DiscoveryServiceCertificateList
    plural: discoveryservicecertificates
    singular: discoveryservicecertificate
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: DiscoveryServiceCertificate is used to create certificates, either
        self-signed or by using a cert-manager CA issuer. This object is used by the
        DiscoveryService controller to create the required certificates for the diferent
        components of the discovery service. Direct use of DiscoveryServiceCertificate
        objects is discouraged.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: DiscoveryServiceCertificateSpec defines the desired state of
            DiscoveryServiceCertificate
          properties:
            certificateRenewalNotification:
              description: CertificateRenewalConfig configures the certificate renewal
                process. If unset default behavior is to renew the certificate but
                not notify of renewals.
              properties:
                enabled:
                  description: Enabled is a flag to enable or disable renewal of the
                    certificate
                  type: boolean
                notify:
                  description: Notify field holds a reference to another object which
                    will be notified of a certificate renewal through a condition.
                    The other object's controller is in charge of performing the necessary
                    tasks once it has been notified of the renewal.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
              required:
              - enabled
              type: object
            commonName:
              description: CommonName is the CommonName of the certificate
              type: string
            hosts:
              description: Hosts is the list of hosts the certificate is valid for.
                Only use when 'IsServerCertificate' is true. If unset, the CommonName
                field will be used to populate the valid hosts of the certificate.
              items:
                type: string
              type: array
            isCA:
              description: IsCA is a boolean specifying that the certificate is a
                CA
              type: boolean
            secretRef:
              description: SecretRef is a reference to the secret that will hold the
                certificate and the private key.
              properties:
                name:
                  description: Name is unique within a namespace to reference a secret
                    resource.
                  type: string
                namespace:
                  description: Namespace defines the space within which the secret
                    name must be unique.
                  type: string
              type: object
            server:
              description: IsServerCertificate is a boolean specifying if the certificate
                should be issued with server auth usage enabled
              type: boolean
            signer:
              description: Signer specifies  the signer to use to create this certificate.
                Supported signers are CertManager and SelfSigned.
              properties:
                caSigned:
                  description: CASigned holds specific configuration for the CASigned
                    signer
                  properties:
                    caSecretRef:
                      description: A reference to a Secret containing the CA
                      properties:
                        name:
                          description: Name is unique within a namespace to reference
                            a secret resource.
                          type: string
                        namespace:
                          description: Namespace defines the space within which the
                            secret name must be unique.
                          type: string
                      type: object
                  required:
                  - caSecretRef
                  type: object
                certManager:
                  description: CertManager holds specific configuration for the CertManager
                    signer
                  properties:
                    clusterIssuer:
                      description: The name of the cert-manager ClusterIssuer to be
                        used to sign the
                      type: string
                  required:
                  - clusterIssuer
                  type: object
                selfSigned:
                  description: SelfSigned holds specific configuration for the SelfSigned
                    signer
                  type: object
              type: object
            validFor:
              description: ValidFor specifies the validity of the certificate in seconds
              format: int64
              type: integer
          required:
          - commonName
          - secretRef
          - signer
          - validFor
          type: object
        status:
          description: DiscoveryServiceCertificateStatus defines the observed state
            of DiscoveryServiceCertificate
          properties:
            conditions:
              description: Conditions represent the latest available observations
                of an object's state
              items:
                description: "Condition represents an observation of an object's state.
                  Conditions are an extension mechanism intended to be used when the
                  details of an observation are not a priori known or would not apply
                  to all instances of a given Kind. \n Conditions should be added
                  to explicitly convey properties that users and components care about
                  rather than requiring those properties to be inferred from other
                  observations. Once defined, the meaning of a Condition can not be
                  changed arbitrarily - it becomes part of the API, and has the same
                  backwards- and forwards-compatibility concerns of any other part
                  of the API."
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    description: ConditionReason is intended to be a one-word, CamelCase
                      representation of the category of cause of the current status.
                      It is intended to be used in concise output, such as one-line
                      kubectl get output, and in summarizing occurrences of causes.
                    type: string
                  status:
                    type: string
                  type:
                    description: "ConditionType is the type of the condition and is
                      typically a CamelCased word or short phrase. \n Condition types
                      should indicate state in the \"abnormal-true\" polarity. For
                      example, if the condition indicates when a policy is invalid,
                      the \"is valid\" case is probably the norm, so the condition
                      should be called \"Invalid\"."
                    type: string
                required:
                - status
                - type
                type: object
              type: array
          required:
          - conditions
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
