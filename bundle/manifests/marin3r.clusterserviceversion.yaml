apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "marin3r.3scale.net/v1alpha1",
          "kind": "EnvoyBootstrap",
          "metadata": {
            "name": "envoybootstrap-sample"
          },
          "spec": {
            "clientCertificate": {
              "directory": "/etc/envoy/tls/client",
              "duration": "1h",
              "secretName": "discoveryservice-client-certificate"
            },
            "discoveryService": "instance",
            "envoyStaticConfig": {
              "adminAccessLogPath": "/dev/null",
              "adminBindAddress": "0.0.0.0:9901",
              "configFile": "config.yaml",
              "configMapNameV2": "envoy-bootstrap-v2",
              "configMapNameV3": "envoy-bootstrap-v3",
              "resourcesDir": "/etc/envoy/bootstrap",
              "rtdsLayerResourceName": "runtime"
            }
          }
        },
        {
          "apiVersion": "marin3r.3scale.net/v1alpha1",
          "kind": "EnvoyConfig",
          "metadata": {
            "name": "example",
            "namespace": "my-namespace"
          },
          "spec": {
            "envoyResources": {
              "clusters": [
                {
                  "name": "example",
                  "value": "name: example\nconnect_timeout: 2s\ntype: STRICT_DNS\nlb_policy: ROUND_ROBIN\nload_assignment:\n  cluster_name: example\n  endpoints: []\n"
                }
              ],
              "listeners": [
                {
                  "name": "http",
                  "value": "name: http\naddress:\n  socket_address:\n    address: 0.0.0.0\n    port_value: 8080\nfilter_chains:\n- filters:\n  - name: envoy.http_connection_manager\n    typed_config:\n      \"@type\": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager\n      stat_prefix: ingress_http\n      route_config:\n        name: local_route\n        virtual_hosts:\n        - name: example\n          domains: [\"*\"]\n          routes:\n          - match:\n              prefix: \"/\"\n            route:\n              cluster: example\n      http_filters:\n      - name: envoy.router\n"
                }
              ],
              "secrets": [
                {
                  "name": "example.com",
                  "ref": {
                    "name": "example-cert",
                    "namespace": "my-namespace"
                  }
                }
              ]
            },
            "nodeID": "example",
            "serialization": "yaml"
          }
        },
        {
          "apiVersion": "marin3r.3scale.net/v1alpha1",
          "kind": "EnvoyConfigRevision",
          "metadata": {
            "name": "example",
            "namespace": "my-namespace"
          },
          "spec": {
            "envoyResources": {
              "clusters": [
                {
                  "name": "example",
                  "value": "name: example\nconnect_timeout: 2s\ntype: STRICT_DNS\nlb_policy: ROUND_ROBIN\nload_assignment:\n  cluster_name: example\n  endpoints: []\n"
                }
              ],
              "listeners": [
                {
                  "name": "http",
                  "value": "name: http\naddress:\n  socket_address:\n    address: 0.0.0.0\n    port_value: 8080\nfilter_chains:\n- filters:\n  - name: envoy.http_connection_manager\n    typed_config:\n      \"@type\": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager\n      stat_prefix: ingress_http\n      route_config:\n        name: local_route\n        virtual_hosts:\n        - name: example\n          domains: [\"*\"]\n          routes:\n          - match:\n              prefix: \"/\"\n            route:\n              cluster: example\n      http_filters:\n      - name: envoy.router\n"
                }
              ],
              "secrets": [
                {
                  "name": "example.com",
                  "ref": {
                    "name": "example-cert",
                    "namespace": "my-namespace"
                  }
                }
              ]
            },
            "nodeID": "example",
            "serialization": "yaml",
            "version": "hash"
          }
        },
        {
          "apiVersion": "operator.marin3r.3scale.net/v1alpha1",
          "kind": "DiscoveryService",
          "metadata": {
            "name": "instance"
          },
          "spec": {
            "debug": true,
            "discoveryServiceNamespace": "default",
            "enabledNamespaces": [
              "test1",
              "test2"
            ],
            "image": "quay.io/3scale/marin3r:latest"
          }
        },
        {
          "apiVersion": "operator.marin3r.3scale.net/v1alpha1",
          "kind": "DiscoveryServiceCertificate",
          "metadata": {
            "name": "test-cert",
            "namespace": "default"
          },
          "spec": {
            "commonName": "test-client",
            "secretRef": {
              "name": "test-cert",
              "namespace": "default"
            },
            "signer": {
              "certManager": {
                "clusterIssuer": "marin3r-instance"
              }
            },
            "validFor": 3600
          }
        }
      ]
    capabilities: Basic Install
    certified: "false"
    containerImage: quay.io/3scale/marin3r
    description: Manage an Envoy Discovery Service and a fleet of Envoy proxies.
    operators.operatorframework.io/builder: operator-sdk-v1.1.0
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v2
    repository: https://github.com/3scale/marin3r
    support: Red Hat, Inc.
  name: marin3r.v0.7.0-alpha5
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: DiscoveryServiceCertificate is used to create certificates, either self-signed or by using a cert-manager CA issuer. This object is used by the DiscoveryService controller to create the required certificates for the different components of the discovery service. Direct use of DiscoveryServiceCertificate objects is discouraged.
      displayName: DiscoveryServiceCertificate
      kind: DiscoveryServiceCertificate
      name: discoveryservicecertificates.operator.marin3r.3scale.net
      specDescriptors:
      - description: CertificateRenewalConfig configures the certificate renewal process. If unset default behavior is to renew the certificate but not notify of renewals.
        displayName: Certificate Renewal Config
        path: certificateRenewalNotification
      - description: Enabled is a flag to enable or disable renewal of the certificate
        displayName: Enabled
        path: certificateRenewalNotification.enabled
      - description: CommonName is the CommonName of the certificate
        displayName: Common Name
        path: commonName
      - description: Hosts is the list of hosts the certificate is valid for. Only use when 'IsServerCertificate' is true. If unset, the CommonName field will be used to populate the valid hosts of the certificate.
        displayName: Hosts
        path: hosts
      - description: IsCA is a boolean specifying that the certificate is a CA
        displayName: Is CA
        path: isCA
      - description: SecretRef is a reference to the secret that will hold the certificate and the private key.
        displayName: Secret Ref
        path: secretRef
      - description: IsServerCertificate is a boolean specifying if the certificate should be issued with server auth usage enabled
        displayName: Is Server Certificate
        path: server
      - description: Signer specifies  the signer to use to create this certificate. Supported signers are CertManager and SelfSigned.
        displayName: Signer
        path: signer
      - description: CASigned holds specific configuration for the CASigned signer
        displayName: CASigned
        path: signer.caSigned
      - description: A reference to a Secret containing the CA
        displayName: Secret Ref
        path: signer.caSigned.caSecretRef
      - description: SelfSigned holds specific configuration for the SelfSigned signer
        displayName: Self Signed
        path: signer.selfSigned
      - description: ValidFor specifies the validity of the certificate in seconds
        displayName: Valid For
        path: validFor
      statusDescriptors:
      - description: Conditions represent the latest available observations of an object's state
        displayName: Conditions
        path: conditions
      version: v1alpha1
    - description: DiscoveryService represents an envoy discovery service server. Currently only one DiscoveryService per cluster is supported.
      displayName: DiscoveryService
      kind: DiscoveryService
      name: discoveryservices.operator.marin3r.3scale.net
      specDescriptors:
      - description: ServiceConfig configures the way the DiscoveryService endpoints are exposed
        displayName: Service Config
        path: ServiceConfig
      - displayName: Name
        path: ServiceConfig.name
      - displayName: Type
        path: ServiceConfig.type
      - description: Debug enables debugging log level for the discovery service controllers. It is safe to use since secret data is never shown in the logs.
        displayName: Debug
        path: debug
      - description: Image holds the image to use for the discovery service Deployment
        displayName: Image
        path: image
      - description: MetricsPort is the port where metrics are served. Defaults to 8383.
        displayName: Metrics Port
        path: metricsPort
      - description: PKIConfig has configuration for the PKI that marin3r manages for the different certificates it requires
        displayName: PKIConfig
        path: pkiConfg
      - displayName: Root Certificate Authority
        path: pkiConfg.rootCertificateAuthority
      - displayName: Duration
        path: pkiConfg.rootCertificateAuthority.duration
      - displayName: Secret Name
        path: pkiConfg.rootCertificateAuthority.secretName
      - displayName: Server Certificate
        path: pkiConfg.serverCertificate
      - displayName: Duration
        path: pkiConfg.serverCertificate.duration
      - displayName: Secret Name
        path: pkiConfg.serverCertificate.secretName
      - description: Resources holds the Resource Requirements to use for the discovery service Deployment. When not set it defaults to no resource requests nor limits. CPU and Memory resources are supported.
        displayName: Resources
        path: resources
      - description: XdsServerPort is the port where the xDS server listens. Defaults to 18000.
        displayName: Xds Server Port
        path: xdsPort
      statusDescriptors:
      - description: Conditions represent the latest available observations of an object's state
        displayName: Conditions
        path: conditions
      version: v1alpha1
    - description: EnvoyBootstrap is the Schema for the envoybootstraps API
      displayName: EnvoyBootstrap
      kind: EnvoyBootstrap
      name: envoybootstraps.marin3r.3scale.net
      specDescriptors:
      - description: ClientCertificate is a struct containing options for the certificate used to authenticate with the discovery service
        displayName: Client Certificate
        path: clientCertificate
      - description: Directory defines the directory in the envoy container where the certificate will be mounted
        displayName: Directory
        path: clientCertificate.directory
      - description: The requested ‘duration’ (i.e. lifetime) of the Certificate
        displayName: Duration
        path: clientCertificate.duration
      - description: The Secret where the certificate will be stored
        displayName: Secret Name
        path: clientCertificate.secretName
      - description: DiscoveryService is the name of the DiscoveryService resource the envoy will be a client of
        displayName: Discovery Service
        path: discoveryService
      - description: EnvoyStaticConfig is a struct that controls options for the envoy's static config file
        displayName: Envoy Static Config
        path: envoyStaticConfig
      - description: AdminAccessLogPath configures where the envoy's admin server logs are written to
        displayName: Admin Access Log Path
        path: envoyStaticConfig.adminAccessLogPath
      - description: AdminBindAddress is where envoy's admin server binds to.
        displayName: Admin Bind Address
        path: envoyStaticConfig.adminBindAddress
      - description: ConfigFile is the path of envoy's bootstrap config file
        displayName: Config File
        path: envoyStaticConfig.configFile
      - description: The ConfigMap where the envoy client v2 static config will be stored
        displayName: Config Map Name V2
        path: envoyStaticConfig.configMapNameV2
      - description: The ConfigMap where the envoy client v3 static config will be stored
        displayName: Config Map Name V3
        path: envoyStaticConfig.configMapNameV3
      - description: ResourcesDir is the path where resource files are loaded from. It is used to load discovery messages directly from the filesystem, for example in order to be able to bootstrap certificates and support rotation when they are modified.
        displayName: Resources Dir
        path: envoyStaticConfig.resourcesDir
      - description: RtdsLayerResourceName is the resource name that the envoy client will request when askikng the discovery service for Runtime resources.
        displayName: Rtds Layer Resource Name
        path: envoyStaticConfig.rtdsLayerResourceName
      version: v1alpha1
    - description: EnvoyConfigRevision holds an specific version of the EnvoyConfig resources. EnvoyConfigRevisions are automatically created and deleted  by the EnvoyConfig controller and are not intended to be directly used. Use EnvoyConfig objects instead.
      displayName: EnvoyConfigRevision
      kind: EnvoyConfigRevision
      name: envoyconfigrevisions.marin3r.3scale.net
      specDescriptors:
      - description: EnvoyAPI is the version of envoy's API to use. Defaults to v2.
        displayName: Envoy API
        path: envoyAPI
      - description: EnvoyResources holds the different types of resources suported by the envoy discovery service
        displayName: Envoy Resources
        path: envoyResources
      - description: NodeID holds the envoy identifier for the discovery service to know which set of resources to send to each of the envoy clients that connect to it.
        displayName: Node ID
        path: nodeID
      - description: Serialization specicifies the serialization format used to describe the resources. "json" and "yaml" are supported. "json" is used if unset.
        displayName: Serialization
        path: serialization
      - description: Version is a hash of the EnvoyResources field
        displayName: Version
        path: version
      statusDescriptors:
      - description: Conditions represent the latest available observations of an object's state
        displayName: Conditions
        path: conditions
      - description: LastPublishedAt indicates the last time this config review transitioned to published
        displayName: Last Published At
        path: lastPublishedAt
      - description: Published signals if the EnvoyConfigRevision is the one currently published in the xds server cache
        displayName: Published
        path: published
      - description: Tainted indicates whether the EnvoyConfigRevision is eligible for publishing or not
        displayName: Tainted
        path: tainted
      version: v1alpha1
    - description: EnvoyConfig holds the configuration for a given envoy nodeID. The spec of an EnvoyConfig object holds the envoy resources that conform the desired configuration for the given nodeID and that the discovery service will send to any envoy client that identifies itself with that nodeID.
      displayName: EnvoyConfig
      kind: EnvoyConfig
      name: envoyconfigs.marin3r.3scale.net
      resources:
      - kind: EnvoyConfigRevision
        name: ""
        version: v1alpha1
      specDescriptors:
      - description: EnvoyAPI is the version of envoy's API to use. Defaults to v2.
        displayName: Envoy API
        path: envoyAPI
      - description: EnvoyResources holds the different types of resources suported by the envoy discovery service
        displayName: Envoy Resources
        path: envoyResources
      - description: 'Clusters is a list of the envoy Cluster resource type. V2 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/cluster.proto V3 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/cluster/v3/cluster.proto'
        displayName: Clusters
        path: envoyResources.clusters
      - description: Name of the envoy resource
        displayName: Name
        path: envoyResources.clusters[0].name
      - description: Value is the serialized representation of the envoy resource
        displayName: Value
        path: envoyResources.clusters[0].value
      - description: 'Endpoints is a list of the envoy ClusterLoadAssignment resource type. V2 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/endpoint.proto V3 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/endpoint/v3/endpoint.proto'
        displayName: Endpoints
        path: envoyResources.endpoints
      - description: Name of the envoy resource
        displayName: Name
        path: envoyResources.endpoints[0].name
      - description: Value is the serialized representation of the envoy resource
        displayName: Value
        path: envoyResources.endpoints[0].value
      - description: 'Listeners is a list of the envoy Listener resource type. V2 referece: https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/listener.proto V3 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/listener/v3/listener.proto'
        displayName: Listeners
        path: envoyResources.listeners
      - description: Name of the envoy resource
        displayName: Name
        path: envoyResources.listeners[0].name
      - description: Value is the serialized representation of the envoy resource
        displayName: Value
        path: envoyResources.listeners[0].value
      - description: 'Routes is a list of the envoy Route resource type. V2 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/route.proto V3 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/route/v3/route.proto'
        displayName: Routes
        path: envoyResources.routes
      - description: Name of the envoy resource
        displayName: Name
        path: envoyResources.routes[0].name
      - description: Value is the serialized representation of the envoy resource
        displayName: Value
        path: envoyResources.routes[0].value
      - description: 'Runtimes is a list of the envoy Runtime resource type. V2 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v2/service/discovery/v2/rtds.proto V3 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/service/runtime/v3/rtds.proto'
        displayName: Runtimes
        path: envoyResources.runtime
      - description: Name of the envoy resource
        displayName: Name
        path: envoyResources.runtime[0].name
      - description: Value is the serialized representation of the envoy resource
        displayName: Value
        path: envoyResources.runtime[0].value
      - description: Secrets is a list of references to Kubernetes Secret objects.
        displayName: Secrets
        path: envoyResources.secrets
      - description: Name of the envoy resource
        displayName: Name
        path: envoyResources.secrets[0].name
      - description: Ref is a reference to a Kubernetes Secret of type "kubernetes.io/tls" from which an envoy Secret resource will be automatically created.
        displayName: Ref
        path: envoyResources.secrets[0].ref
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:SecretReference
      - description: NodeID holds the envoy identifier for the discovery service to know which set of resources to send to each of the envoy clients that connect to it.
        displayName: Node ID
        path: nodeID
      - description: Serialization specicifies the serialization format used to describe the resources. "json" and "yaml" are supported. "json" is used if unset.
        displayName: Serialization
        path: serialization
      statusDescriptors:
      - description: CacheState summarizes all the observations about the EnvoyConfig to give the user a concrete idea on the general status of the discovery servie cache. It is intended only for human consumption. Other controllers should relly on conditions to determine the status of the discovery server cache.
        displayName: Cache State
        path: cacheState
      - description: Conditions represent the latest available observations of an object's state
        displayName: Conditions
        path: conditions
      - description: DesiredVersion represents the resources version described in the spec of the EnvoyConfig object
        displayName: Desired Version
        path: desiredVersion
      - description: PublishedVersion is the config version currently served by the envoy discovery service for the give nodeID
        displayName: Published Version
        path: publishedVersion
      - description: ConfigRevisions is an ordered list of references to EnvoyConfigRevision objects
        displayName: Config Revisions
        path: revisions
      - description: Ref is a reference to the EnvoyConfigRevision object that holds the configuration matching the Version field.
        displayName: Ref
        path: revisions[0].ref
      - description: Version is a hash of the EnvoyResources field
        displayName: Version
        path: revisions[0].version
      version: v1alpha1
  description: |
    Marin3r is an operator to manage an Envoy discovery service and a fleet of Envoy proxies that
    connect to it to fetch their configurations dynamically. It's main purpose is to provide
    an easy way to deploy a discovery service with the basic functionality already in place so you
    can focus on developing your Envoy configurationss or even your own domain specifig CRDs leveraging
    the ones that Marin3r provides.


    ## Managed installation (kind DiscoveryService)

    * Basic installation and setup of an Envoy discovery service
    * Automatic deployment of a kubernetes mutating admission webhook to inject Envoy sidecars in your pods
    * Automatic configuration of Envoy sidecars to find the discovery service within the cluster
    * Mututal TLS authentication between Envoy sidecars and the discovery service
    * The discovery service and the Envoy proxies that conenct to it must live in the same namespace

    ## Deploy Envoy configurations as kubernetes custom resources (kind EnvoyConfig)

    * Each EnvoyConfig object holds Envoy resources that will be "pushed" to the appropriate set of pods
    * Control which config goes to which pod directly using annotations on the pod
    * The whole Envoy v2 API is supported
    * Envoy resources can be both expressed as json or yaml
    * A history of the last 10 configurations is kept per EnvoyConfig object
    * Self-healing is attempted when the Envoy sidecars are not able to load the resources defined in the
      EnvoyConfig by rolling back to a previous working config version

    ## License
    marin3r is licensed under the [Apache 2.0 license](https://github.com/3scale/prometheus-exporter-operator/blob/master/LICENSE)
  displayName: marin3r
  icon:
  - base64data: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMzc1cHQiIGhlaWdodD0iMzc0Ljk5OTk5MXB0IiB2aWV3Qm94PSIwIDAgMzc1IDM3NC45OTk5OTEiIHZlcnNpb249IjEuMiI+CjxkZWZzPgo8Zz4KPHN5bWJvbCBvdmVyZmxvdz0idmlzaWJsZSIgaWQ9ImdseXBoMC0wIj4KPHBhdGggc3R5bGU9InN0cm9rZTpub25lOyIgZD0iIi8+Cjwvc3ltYm9sPgo8c3ltYm9sIG92ZXJmbG93PSJ2aXNpYmxlIiBpZD0iZ2x5cGgwLTEiPgo8cGF0aCBzdHlsZT0ic3Ryb2tlOm5vbmU7IiBkPSJNIDQ1LjIwMzEyNSAwIEwgNDEuNTMxMjUgMCBMIDQxLjUzMTI1IC0yMi4wMzEyNSBMIDI1LjYwOTM3NSAwIEwgMjMuNzE4NzUgMCBMIDcuNzgxMjUgLTIyLjAzMTI1IEwgNy43ODEyNSAwIEwgNC4xMDkzNzUgMCBMIDQuMTA5Mzc1IC0yOS41MTU2MjUgTCA2Ljg3NSAtMjkuNTE1NjI1IEwgMjQuNjU2MjUgLTQuOTM3NSBMIDQyLjQyMTg3NSAtMjkuNTE1NjI1IEwgNDUuMjAzMTI1IC0yOS41MTU2MjUgWiBNIDQ1LjIwMzEyNSAwICIvPgo8L3N5bWJvbD4KPHN5bWJvbCBvdmVyZmxvdz0idmlzaWJsZSIgaWQ9ImdseXBoMC0yIj4KPHBhdGggc3R5bGU9InN0cm9rZTpub25lOyIgZD0iTSA0Mi40Njg3NSAwIEwgMzguMDQ2ODc1IDAgTCAzMy41MzEyNSAtNi42NzE4NzUgTCA5LjUzMTI1IC02LjY3MTg3NSBMIDUuMDQ2ODc1IDAgTCAwLjYyNSAwIEwgMjAuNTYyNSAtMjkuNTE1NjI1IEwgMjIuNSAtMjkuNTE1NjI1IFogTSAzMS4wNjI1IC0xMC4zMjgxMjUgTCAyMS41MzEyNSAtMjQuNDA2MjUgTCAxMi4wMTU2MjUgLTEwLjMyODEyNSBaIE0gMzEuMDYyNSAtMTAuMzI4MTI1ICIvPgo8L3N5bWJvbD4KPHN5bWJvbCBvdmVyZmxvdz0idmlzaWJsZSIgaWQ9ImdseXBoMC0zIj4KPHBhdGggc3R5bGU9InN0cm9rZTpub25lOyIgZD0iTSAzOS41MTU2MjUgMCBMIDM1Ljg1OTM3NSAwIEwgMzUuODU5Mzc1IC04LjA0Njg3NSBDIDM1Ljg1OTM3NSAtOC44Nzg5MDYgMzUuNTU0Njg4IC05LjU5Mzc1IDM0Ljk1MzEyNSAtMTAuMTg3NSBDIDM0LjM1OTM3NSAtMTAuNzg5MDYyIDMzLjY0NDUzMSAtMTEuMDkzNzUgMzIuODEyNSAtMTEuMDkzNzUgTCA3Ljc4MTI1IC0xMS4wOTM3NSBMIDcuNzgxMjUgMCBMIDQuMTA5Mzc1IDAgTCA0LjEwOTM3NSAtMjkuNTE1NjI1IEwgMzIuODEyNSAtMjkuNTE1NjI1IEMgMzQuNjY0MDYyIC0yOS41MTU2MjUgMzYuMjQyMTg4IC0yOC44NTkzNzUgMzcuNTQ2ODc1IC0yNy41NDY4NzUgQyAzOC44NTkzNzUgLTI2LjI0MjE4OCAzOS41MTU2MjUgLTI0LjY2NDA2MiAzOS41MTU2MjUgLTIyLjgxMjUgTCAzOS41MTU2MjUgLTE3LjgxMjUgQyAzOS41MTU2MjUgLTE1Ljg4MjgxMiAzOC44MTY0MDYgLTE0LjI1MzkwNiAzNy40MjE4NzUgLTEyLjkyMTg3NSBDIDM4LjgxNjQwNiAtMTEuNTk3NjU2IDM5LjUxNTYyNSAtOS45NzI2NTYgMzkuNTE1NjI1IC04LjA0Njg3NSBaIE0gMzIuODEyNSAtMTQuNzY1NjI1IEMgMzMuNjQ0NTMxIC0xNC43NjU2MjUgMzQuMzU5Mzc1IC0xNS4wNjI1IDM0Ljk1MzEyNSAtMTUuNjU2MjUgQyAzNS41NTQ2ODggLTE2LjI1IDM1Ljg1OTM3NSAtMTYuOTY4NzUgMzUuODU5Mzc1IC0xNy44MTI1IEwgMzUuODU5Mzc1IC0yMi44MTI1IEMgMzUuODU5Mzc1IC0yMy42NDQ1MzEgMzUuNTU0Njg4IC0yNC4zNTkzNzUgMzQuOTUzMTI1IC0yNC45NTMxMjUgQyAzNC4zNTkzNzUgLTI1LjU1NDY4OCAzMy42NDQ1MzEgLTI1Ljg1OTM3NSAzMi44MTI1IC0yNS44NTkzNzUgTCA3Ljc4MTI1IC0yNS44NTkzNzUgTCA3Ljc4MTI1IC0xNC43NjU2MjUgWiBNIDMyLjgxMjUgLTE0Ljc2NTYyNSAiLz4KPC9zeW1ib2w+CjxzeW1ib2wgb3ZlcmZsb3c9InZpc2libGUiIGlkPSJnbHlwaDAtNCI+CjxwYXRoIHN0eWxlPSJzdHJva2U6bm9uZTsiIGQ9Ik0gNy43ODEyNSAwIEwgNy43ODEyNSAtMjkuNTE1NjI1IEwgNC4xMDkzNzUgLTI5LjUxNTYyNSBMIDQuMTA5Mzc1IDAgWiBNIDcuNzgxMjUgMCAiLz4KPC9zeW1ib2w+CjxzeW1ib2wgb3ZlcmZsb3c9InZpc2libGUiIGlkPSJnbHlwaDAtNSI+CjxwYXRoIHN0eWxlPSJzdHJva2U6bm9uZTsiIGQ9Ik0gMzkuNTE1NjI1IDAgTCAzNy4wMzEyNSAwIEwgNy43ODEyNSAtMjMuODQzNzUgTCA3Ljc4MTI1IDAgTCA0LjEwOTM3NSAwIEwgNC4xMDkzNzUgLTI5LjUxNTYyNSBMIDYuNjA5Mzc1IC0yOS41MTU2MjUgTCAzNS44NTkzNzUgLTUuNjg3NSBMIDM1Ljg1OTM3NSAtMjkuNTE1NjI1IEwgMzkuNTE1NjI1IC0yOS41MTU2MjUgWiBNIDM5LjUxNTYyNSAwICIvPgo8L3N5bWJvbD4KPHN5bWJvbCBvdmVyZmxvdz0idmlzaWJsZSIgaWQ9ImdseXBoMC02Ij4KPHBhdGggc3R5bGU9InN0cm9rZTpub25lOyIgZD0iTSAyOS45NTMxMjUgMCBMIDMuMDkzNzUgMCBMIDMuMDkzNzUgLTMuNjU2MjUgTCAyOS45NTMxMjUgLTMuNjU2MjUgQyAzMC43ODUxNTYgLTMuNjU2MjUgMzEuNSAtMy45NTMxMjUgMzIuMDkzNzUgLTQuNTQ2ODc1IEMgMzIuNjk1MzEyIC01LjE0ODQzOCAzMyAtNS44NjcxODggMzMgLTYuNzAzMTI1IEwgMzMgLTkuODc1IEMgMzMgLTEwLjY5NTMxMiAzMi43MTg3NSAtMTEuMzk4NDM4IDMyLjE1NjI1IC0xMS45ODQzNzUgQyAzMS41OTM3NSAtMTIuNTY2NDA2IDMwLjg5MDYyNSAtMTIuODc4OTA2IDMwLjA0Njg3NSAtMTIuOTIxODc1IEwgNy45Njg3NSAtMTIuOTIxODc1IEwgNy45Njg3NSAtMTYuNTkzNzUgTCAzMC4wNDY4NzUgLTE2LjU5Mzc1IEMgMzAuODkwNjI1IC0xNi42MzI4MTIgMzEuNTkzNzUgLTE2Ljk0NTMxMiAzMi4xNTYyNSAtMTcuNTMxMjUgQyAzMi43MTg3NSAtMTguMTEzMjgxIDMzIC0xOC44MTY0MDYgMzMgLTE5LjY0MDYyNSBMIDMzIC0yMi44MTI1IEMgMzMgLTIzLjY0NDUzMSAzMi42OTUzMTIgLTI0LjM1OTM3NSAzMi4wOTM3NSAtMjQuOTUzMTI1IEMgMzEuNSAtMjUuNTU0Njg4IDMwLjc4NTE1NiAtMjUuODU5Mzc1IDI5Ljk1MzEyNSAtMjUuODU5Mzc1IEwgMy4wOTM3NSAtMjUuODU5Mzc1IEwgMy4wOTM3NSAtMjkuNTE1NjI1IEwgMjkuOTUzMTI1IC0yOS41MTU2MjUgQyAzMS44MDQ2ODggLTI5LjUxNTYyNSAzMy4zODI4MTIgLTI4Ljg1OTM3NSAzNC42ODc1IC0yNy41NDY4NzUgQyAzNiAtMjYuMjQyMTg4IDM2LjY1NjI1IC0yNC42NjQwNjIgMzYuNjU2MjUgLTIyLjgxMjUgTCAzNi42NTYyNSAtMTkuNjQwNjI1IEMgMzYuNjU2MjUgLTE3LjcxMDkzOCAzNS45NTcwMzEgLTE2LjA4NTkzOCAzNC41NjI1IC0xNC43NjU2MjUgQyAzNS45NTcwMzEgLTEzLjQyOTY4OCAzNi42NTYyNSAtMTEuODAwNzgxIDM2LjY1NjI1IC05Ljg3NSBMIDM2LjY1NjI1IC02LjcwMzEyNSBDIDM2LjY1NjI1IC00Ljg1OTM3NSAzNiAtMy4yODEyNSAzNC42ODc1IC0xLjk2ODc1IEMgMzMuMzgyODEyIC0wLjY1NjI1IDMxLjgwNDY4OCAwIDI5Ljk1MzEyNSAwIFogTSAyOS45NTMxMjUgMCAiLz4KPC9zeW1ib2w+CjxzeW1ib2wgb3ZlcmZsb3c9InZpc2libGUiIGlkPSJnbHlwaDAtNyI+CjxwYXRoIHN0eWxlPSJzdHJva2U6bm9uZTsiIGQ9Ik0gMzcuNjg3NSAwIEwgNC4xMDkzNzUgMCBMIDQuMTA5Mzc1IC0yOS41MzEyNSBMIDM3LjY4NzUgLTI5LjUzMTI1IEwgMzcuNjg3NSAtMjUuODc1IEwgNy43ODEyNSAtMjUuODc1IEwgNy43ODEyNSAtMTYuNTkzNzUgTCAzNC4yMzQzNzUgLTE2LjU5Mzc1IEwgMzQuMjM0Mzc1IC0xMi45MjE4NzUgTCA3Ljc4MTI1IC0xMi45MjE4NzUgTCA3Ljc4MTI1IC0zLjY1NjI1IEwgMzcuNjg3NSAtMy42NTYyNSBaIE0gMzcuNjg3NSAwICIvPgo8L3N5bWJvbD4KPC9nPgo8Y2xpcFBhdGggaWQ9ImNsaXAxIj4KICA8cGF0aCBkPSJNIDkuNjY0MDYyIDkuNjY0MDYyIEwgMzY1IDkuNjY0MDYyIEwgMzY1IDM2NSBMIDkuNjY0MDYyIDM2NSBaIE0gOS42NjQwNjIgOS42NjQwNjIgIi8+CjwvY2xpcFBhdGg+CjwvZGVmcz4KPGcgaWQ9InN1cmZhY2UxIj4KPHJlY3QgeD0iMCIgeT0iMCIgd2lkdGg9IjM3NSIgaGVpZ2h0PSIzNzQuOTk5OTkxIiBzdHlsZT0iZmlsbDpyZ2IoMTAwJSwxMDAlLDEwMCUpO2ZpbGwtb3BhY2l0eToxO3N0cm9rZTpub25lOyIvPgo8cmVjdCB4PSIwIiB5PSIwIiB3aWR0aD0iMzc1IiBoZWlnaHQ9IjM3NC45OTk5OTEiIHN0eWxlPSJmaWxsOnJnYigxMDAlLDEwMCUsMTAwJSk7ZmlsbC1vcGFjaXR5OjE7c3Ryb2tlOm5vbmU7Ii8+CjxyZWN0IHg9IjAiIHk9IjAiIHdpZHRoPSIzNzUiIGhlaWdodD0iMzc0Ljk5OTk5MSIgc3R5bGU9ImZpbGw6cmdiKDEwMCUsMTAwJSwxMDAlKTtmaWxsLW9wYWNpdHk6MTtzdHJva2U6bm9uZTsiLz4KPGcgY2xpcC1wYXRoPSJ1cmwoI2NsaXAxKSIgY2xpcC1ydWxlPSJub256ZXJvIj4KPHBhdGggc3R5bGU9IiBzdHJva2U6bm9uZTtmaWxsLXJ1bGU6bm9uemVybztmaWxsOnJnYigwJSwwJSwwJSk7ZmlsbC1vcGFjaXR5OjE7IiBkPSJNIDE4Ny4zMzIwMzEgMzY1IEMgODkuMTc1NzgxIDM2NSA5LjY2NDA2MiAyODQuOTQxNDA2IDkuNjY0MDYyIDE4Ny4zMzIwMzEgQyA5LjY2NDA2MiA4OS43MjY1NjIgODkuMTc1NzgxIDkuNjY0MDYyIDE4Ny4zMzIwMzEgOS42NjQwNjIgQyAyODUuNDg4MjgxIDkuNjY0MDYyIDM2NSA4OS4xNzU3ODEgMzY1IDE4Ny4zMzIwMzEgQyAzNjUgMjg1LjQ4ODI4MSAyODQuOTQxNDA2IDM2NSAxODcuMzMyMDMxIDM2NSBaIE0gMTg3LjMzMjAzMSAyMC42MzI4MTIgQyA5NS4yMTA5MzggMjAuNjMyODEyIDIwLjYzMjgxMiA5NS4yMTA5MzggMjAuNjMyODEyIDE4Ny4zMzIwMzEgQyAyMC42MzI4MTIgMjc5LjQ1NzAzMSA5NS4yMTA5MzggMzU0LjAzNTE1NiAxODcuMzMyMDMxIDM1NC4wMzUxNTYgQyAyNzkuNDU3MDMxIDM1NC4wMzUxNTYgMzU0LjAzNTE1NiAyNzkuNDU3MDMxIDM1NC4wMzUxNTYgMTg3LjMzMjAzMSBDIDM1NC4wMzUxNTYgOTUuMjEwOTM4IDI3OC45MTAxNTYgMjAuNjMyODEyIDE4Ny4zMzIwMzEgMjAuNjMyODEyIFogTSAxODcuMzMyMDMxIDIwLjYzMjgxMiAiLz4KPC9nPgo8ZyBzdHlsZT0iZmlsbDpyZ2IoMCUsMCUsMCUpO2ZpbGwtb3BhY2l0eToxOyI+CiAgPHVzZSB4bGluazpocmVmPSIjZ2x5cGgwLTEiIHg9IjMwLjY3Nzk5NSIgeT0iMjAwLjU0MDg4NSIvPgo8L2c+CjxnIHN0eWxlPSJmaWxsOnJnYigwJSwwJSwwJSk7ZmlsbC1vcGFjaXR5OjE7Ij4KICA8dXNlIHhsaW5rOmhyZWY9IiNnbHlwaDAtMiIgeD0iNzkuOTk0NTQyIiB5PSIyMDAuNTQwODg1Ii8+CjwvZz4KPGcgc3R5bGU9ImZpbGw6cmdiKDAlLDAlLDAlKTtmaWxsLW9wYWNpdHk6MTsiPgogIDx1c2UgeGxpbms6aHJlZj0iI2dseXBoMC0zIiB4PSIxMjMuMDc0NDgxIiB5PSIyMDAuNTQwODg1Ii8+CjwvZz4KPGcgc3R5bGU9ImZpbGw6cmdiKDAlLDAlLDAlKTtmaWxsLW9wYWNpdHk6MTsiPgogIDx1c2UgeGxpbms6aHJlZj0iI2dseXBoMC00IiB4PSIxNjUuNjgxMDE0IiB5PSIyMDAuNTQwODg1Ii8+CjwvZz4KPGcgc3R5bGU9ImZpbGw6cmdiKDAlLDAlLDAlKTtmaWxsLW9wYWNpdHk6MTsiPgogIDx1c2UgeGxpbms6aHJlZj0iI2dseXBoMC01IiB4PSIxNzcuNTc3OTExIiB5PSIyMDAuNTQwODg1Ii8+CjwvZz4KPGcgc3R5bGU9ImZpbGw6cmdiKDEwMCUsNTYuODU4ODI2JSwzMC4xOTg2NjklKTtmaWxsLW9wYWNpdHk6MTsiPgogIDx1c2UgeGxpbms6aHJlZj0iI2dseXBoMC02IiB4PSIyMjEuMjEwMjE2IiB5PSIyMDAuNTQwODg1Ii8+CjwvZz4KPGcgc3R5bGU9ImZpbGw6cmdiKDAlLDAlLDAlKTtmaWxsLW9wYWNpdHk6MTsiPgogIDx1c2UgeGxpbms6aHJlZj0iI2dseXBoMC03IiB4PSIyNjAuOTQ0MjI3IiB5PSIyMDAuNTQwODg1Ii8+CjwvZz4KPGcgc3R5bGU9ImZpbGw6cmdiKDAlLDAlLDAlKTtmaWxsLW9wYWNpdHk6MTsiPgogIDx1c2UgeGxpbms6aHJlZj0iI2dseXBoMC0zIiB4PSIzMDEuNzE4ODg1IiB5PSIyMDAuNTQwODg1Ii8+CjwvZz4KPC9nPgo8L3N2Zz4K
    mediatype: image/svg+xml
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: marin3r-controller-manager
      deployments:
      - name: marin3r-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=10
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                resources: {}
              - args:
                - operator
                - --metrics-addr=127.0.0.1:8080
                - --enable-leader-election
                command:
                - /manager
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                image: quay.io/3scale/marin3r:v0.7.0-alpha5
                name: manager
                resources:
                  limits:
                    cpu: 300m
                    memory: 300Mi
                  requests:
                    cpu: 100m
                    memory: 100Mi
              serviceAccountName: marin3r-controller-manager
              terminationGracePeriodSeconds: 10
      - name: marin3r-controller-webhook
        spec:
          replicas: 2
          selector:
            matchLabels:
              control-plane: controller-webhook
          strategy: {}
          template:
            metadata:
              labels:
                control-plane: controller-webhook
            spec:
              containers:
              - args:
                - webhook
                - --tls-dir=/apiserver.local.config/certificates
                - --tls-cert-name=apiserver.crt
                - --tls-key-name=apiserver.key
                command:
                - /manager
                image: quay.io/3scale/marin3r:v0.7.0-alpha5
                name: webhook
                ports:
                - containerPort: 9443
                  name: webhook-server
                  protocol: TCP
                resources: {}
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - configmaps/status
          verbs:
          - get
          - update
          - patch
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - create
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - create
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - serviceaccounts
          verbs:
          - create
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - services
          verbs:
          - create
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - marin3r.3scale.net
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - marin3r.3scale.net
          resources:
          - envoybootstraps
          verbs:
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - marin3r.3scale.net
          resources:
          - envoybootstraps/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - marin3r.3scale.net
          resources:
          - envoyconfigrevisions
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - marin3r.3scale.net
          resources:
          - envoyconfigrevisions/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - marin3r.3scale.net
          resources:
          - envoyconfigs
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - marin3r.3scale.net
          resources:
          - envoyconfigs/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - operator.marin3r.3scale.net
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - operator.marin3r.3scale.net
          resources:
          - discoveryservicecertificates
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - operator.marin3r.3scale.net
          resources:
          - discoveryservicecertificates/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - rolebindings
          verbs:
          - create
          - get
          - list
          - patch
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - roles
          verbs:
          - create
          - get
          - list
          - patch
          - watch
        serviceAccountName: marin3r-controller-manager
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: true
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - envoy
  - discovery
  - controlplane
  - proxy
  - sidecar
  - xds
  - network
  links:
  - name: GitHub
    url: https://github.com/3scale/marin3r
  maintainers:
  - email: 3scale-operations+marin3r@redhat.com
    name: 3scale Operations Team
  maturity: alpha
  provider:
    name: Red Hat
  version: 0.7.0-alpha5
  webhookdefinitions:
  - admissionReviewVersions:
    - v1beta1
    containerPort: 9443
    deploymentName: marin3r-controller-webhook
    failurePolicy: Fail
    generateName: sidecar-injector.marin3r.3scale.net
    matchPolicy: Equivalent
    objectSelector:
      matchLabels:
        marin3r.3scale.net/status: enabled
    reinvocationPolicy: Never
    rules:
    - apiGroups:
      - ""
      apiVersions:
      - v1
      operations:
      - CREATE
      resources:
      - pods
      scope: Namespaced
    sideEffects: None
    timeoutSeconds: 5
    type: MutatingAdmissionWebhook
    webhookPath: /pod-v1-mutate
